#####################################################################################
#
#  Name:        Timbre Freeman
#  Assignment:  Final - Word Search Maker
#  Date:        03/03/2020
#  Class:       CIS 283
#  Description: Make a program that make a word search in a pdf for a list of words
#
#####################################################################################

# lib
require './puzzle.rb'
require './pdf.rb'
#require 'prawn/table'

# Debugging flag
$debug = false

# Var for making the puzzle
size = 45
file = "words.txt"
info = {
    :Title    => "Word Puzzle",
    :Author   => "Timbre Freeman",
    :Subject  => "CIS 283 - Final Project - Output"
}
pdf_file = "puzzle.pdf"
Thread.abort_on_exception = true

# ***Make the Puzzle***
puts "Welcome to Puzzle maker"
puts "-This is a test program that rerun the puzzle making and put the times in file.csv-"
puts "-full time to complete, time to complete with reset, time complete, resets-"
print "How long do you want us to get times(sec)? "
time_to_run = gets.chomp.to_i
puts "***preset y and than enter to end program***"

require "csv"
CSV.open("file.csv", "wb") do |csv|
  #csv << ["full_time_complet", "time_complet_w_reset", "time_complet"]
  full_time = Time.now  # timer for how long it takes making the puzzle
  while (Time.now - full_time) <= time_to_run # 24hr is 86400sec
    full_time2 = Time.now
    time_start = Time.now  # timer for how long it takes making the puzzle
    resets = 0
    print "Making puzzle "
    puz = Puzzle.new(size, file, $debug)
    make_puzzle_thr = Thread.new {
      puz.make_puzzle
    }

    exit_thr = Thread.new { # allow us to exit the program
      while gets.chomp != "y"
        puts "still running"
      end
      make_puzzle_thr.exit
    }

    while make_puzzle_thr.status == "run" # check if the we are still making the puzzle
      #print ". "
      #sleep(1)
      if (Time.now - time_start) >= 2
        puts ""
        puts "Too Long - retrying"
        resets += 1
        time_start = Time.now
        make_puzzle_thr.exit
        puz.restart
        make_puzzle_thr = Thread.new {
          puz.make_puzzle
        }
      end
    end
    puts ""
    # close both threads
    make_puzzle_thr.exit
    exit_thr.exit
    time_complet = Time.now - time_start
    puts "Finish Making Puzzle at #{time_complet}"
    time_complet_w_reset = Time.now - full_time2
    puts "Finish Making Puzzle with reset at #{time_complet_w_reset}"

    puts puz.puzzle_board_as_string if $debug

    puts "Making #{pdf_file}"
    #make_pdf(pdf_file, puz, info)
    full_time_complet = Time.now - full_time2
    puts "Finish Making Puzzle & PDF at #{full_time_complet}"
    csv << [full_time_complet, time_complet_w_reset, time_complet, resets]
    puts ""
  end
end
